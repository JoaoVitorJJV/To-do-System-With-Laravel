{"ast":null,"code":"const BASE_URL = \"http://localhost:8989\";\nconst headers = {\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\"\n};\nexport const login = async (email, password) => {\n  const req = await fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const res = await req.json();\n  return res;\n};\nexport const register = async (email, name, password) => {\n  const req = await fetch(`${BASE_URL}/user`, {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({\n      email,\n      password,\n      name\n    })\n  });\n  const res = await req.json();\n  return res;\n};\nexport const createTask = async data => {\n  const req = await fetch(`${BASE_URL}/task/new`, {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(data)\n  });\n  const res = await req.json();\n  return res;\n};\nexport const getTaskByUserId = async id => {\n  const req = await fetch(`${BASE_URL}/task/createdby/${id}`, {\n    method: \"GET\",\n    headers\n  });\n  const res = await req.json();\n  return res;\n};\nexport const markAsCompleted = async id => {\n  const req = await fetch(`${BASE_URL}/task/complete/${id}`, {\n    method: \"PATCH\",\n    headers\n  });\n  const res = await req.json();\n  return res;\n};\nexport const markAsIncomplete = async id => {\n  const req = await fetch(`${BASE_URL}/task/incomplete/${id}`, {\n    method: \"PATCH\",\n    headers\n  });\n  const res = await req.json();\n  return res;\n};","map":{"version":3,"names":["BASE_URL","headers","login","email","password","req","fetch","method","body","JSON","stringify","res","json","register","name","createTask","data","getTaskByUserId","id","markAsCompleted","markAsIncomplete"],"sources":["C:/Users/Nagem Boulevard/Documents/Projetos/Teste-PHP-Equilibrium/vue/src/api/api.js"],"sourcesContent":["const BASE_URL = \"http://localhost:8989\";\r\n\r\nconst headers = {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    const req = await fetch(`${BASE_URL}/signin`, {\r\n        method: \"POST\",\r\n        headers,\r\n        body: JSON.stringify({\r\n            email, password\r\n        })\r\n    });\r\n\r\n    const res = await req.json();\r\n\r\n    return res;\r\n}\r\n\r\nexport const register = async (email, name, password) => {\r\n    const req = await fetch(`${BASE_URL}/user`, {\r\n        method: \"POST\",\r\n        headers,\r\n        body: JSON.stringify({\r\n            email, password, name\r\n        })\r\n    });\r\n\r\n    const res = await req.json();\r\n\r\n    return res;\r\n}\r\n\r\nexport const createTask = async (data) => {\r\n    const req = await fetch(`${BASE_URL}/task/new`, {\r\n        method: \"POST\",\r\n        headers,\r\n        body: JSON.stringify(data)\r\n    });\r\n\r\n    const res = await req.json();\r\n\r\n    return res;\r\n}\r\n\r\nexport const getTaskByUserId = async (id) => {\r\n    const req = await fetch(`${BASE_URL}/task/createdby/${id}`, {\r\n        method: \"GET\",\r\n        headers\r\n    });\r\n\r\n    const res = await req.json();\r\n\r\n    return res;\r\n}\r\n\r\nexport const markAsCompleted = async (id) => {\r\n    const req = await fetch(`${BASE_URL}/task/complete/${id}`, {\r\n        method: \"PATCH\",\r\n        headers\r\n    });\r\n\r\n    const res = await req.json();\r\n\r\n    return res;\r\n}\r\n\r\nexport const markAsIncomplete= async (id) => {\r\n    const req = await fetch(`${BASE_URL}/task/incomplete/${id}`, {\r\n        method: \"PATCH\",\r\n        headers\r\n    });\r\n\r\n    const res = await req.json();\r\n\r\n    return res;\r\n}"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,OAAO,GAAG;EACZ,QAAQ,EAAE,kBAAkB;EAC5B,cAAc,EAAE;AACpB,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC5C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEN,QAAS,SAAQ,EAAE;IAC1CO,MAAM,EAAE,MAAM;IACdN,OAAO;IACPO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBP,KAAK;MAAEC;IACX,CAAC;EACL,CAAC,CAAC;EAEF,MAAMO,GAAG,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;EAE5B,OAAOD,GAAG;AACd,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG,MAAAA,CAAOV,KAAK,EAAEW,IAAI,EAAEV,QAAQ,KAAK;EACrD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEN,QAAS,OAAM,EAAE;IACxCO,MAAM,EAAE,MAAM;IACdN,OAAO;IACPO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjBP,KAAK;MAAEC,QAAQ;MAAEU;IACrB,CAAC;EACL,CAAC,CAAC;EAEF,MAAMH,GAAG,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;EAE5B,OAAOD,GAAG;AACd,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG,MAAOC,IAAI,IAAK;EACtC,MAAMX,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEN,QAAS,WAAU,EAAE;IAC5CO,MAAM,EAAE,MAAM;IACdN,OAAO;IACPO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACM,IAAI;EAC7B,CAAC,CAAC;EAEF,MAAML,GAAG,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;EAE5B,OAAOD,GAAG;AACd,CAAC;AAED,OAAO,MAAMM,eAAe,GAAG,MAAOC,EAAE,IAAK;EACzC,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEN,QAAS,mBAAkBkB,EAAG,EAAC,EAAE;IACxDX,MAAM,EAAE,KAAK;IACbN;EACJ,CAAC,CAAC;EAEF,MAAMU,GAAG,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;EAE5B,OAAOD,GAAG;AACd,CAAC;AAED,OAAO,MAAMQ,eAAe,GAAG,MAAOD,EAAE,IAAK;EACzC,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEN,QAAS,kBAAiBkB,EAAG,EAAC,EAAE;IACvDX,MAAM,EAAE,OAAO;IACfN;EACJ,CAAC,CAAC;EAEF,MAAMU,GAAG,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;EAE5B,OAAOD,GAAG;AACd,CAAC;AAED,OAAO,MAAMS,gBAAgB,GAAE,MAAOF,EAAE,IAAK;EACzC,MAAMb,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEN,QAAS,oBAAmBkB,EAAG,EAAC,EAAE;IACzDX,MAAM,EAAE,OAAO;IACfN;EACJ,CAAC,CAAC;EAEF,MAAMU,GAAG,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;EAE5B,OAAOD,GAAG;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}